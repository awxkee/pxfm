/*
 * // Copyright (c) Radzivon Bartoshyk 8/2025. All rights reserved.
 * //
 * // Redistribution and use in source and binary forms, with or without modification,
 * // are permitted provided that the following conditions are met:
 * //
 * // 1.  Redistributions of source code must retain the above copyright notice, this
 * // list of conditions and the following disclaimer.
 * //
 * // 2.  Redistributions in binary form must reproduce the above copyright notice,
 * // this list of conditions and the following disclaimer in the documentation
 * // and/or other materials provided with the distribution.
 * //
 * // 3.  Neither the name of the copyright holder nor the names of its
 * // contributors may be used to endorse or promote products derived from
 * // this software without specific prior written permission.
 * //
 * // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
use crate::dyadic_float::{DyadicFloat128, DyadicSign};

/**
Y0 zeros and extremums

Generated by SageMath:
```python
R120 = RealField(120)

zeros = []

mp.prec = 150

step = mpf("0.1")
epsilon = mpf("1e-35")
x = mpf("1.25")

previous_zero = R120(0)
y0_zeros = []

while x < mpf("76.0"):
    f1 = bessely(0, x)
    f2 = bessely(0, x + step)
    if f1 * f2 < 0:
        zero = findroot(lambda t: bessely(0, t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        previous_zero = zero
        y0_zeros.append(zero)
    if previous_zero is not None and abs(x - mpf(f'{round(x)}')) < epsilon:
        zeros.append(previous_zero)
    x += step

y0_extrema = []

x = mpf("1.25")
while x < mpf("76.0"):
    d1 = mp.diff(lambda t: bessely(0, t), x)
    d2 = mp.diff(lambda t: bessely(0, t), x + step)
    if d1 * d2 < 0:
        extremum = findroot(lambda t: mp.diff(lambda u: bessely(0, u), t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        y0_extrema.append(extremum)
    x += step

# Print results
for i, z in enumerate(y0_zeros):
    print(f"Zero {i+1}: x â‰ˆ {z}")

print("Extrema (peaks/valleys) of Y0(x):")
for e in y0_extrema:
    print(f"nExtrema: {e}")

y0_zeros.extend(y0_extrema)

y0_zeros = sorted(y0_zeros)

print("pub(crate) static Y0_ZEROS_RATIONAL128: [DyadicFloat128; 48] = [")
print(f"DyadicFloat128 {{ sign: DyadicSign::Pos, exponent: 0, mantissa: 0x0u128, }},")
for z in y0_zeros:
    print_dyadic(z)

print("];")
```
 **/
pub(crate) static Y0_ZEROS_RATIONAL128: [DyadicFloat128; 48] = [
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: 0,
        mantissa: 0x0u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -126,
        mantissa: 0x8c9df6a6_ff921721_70d796f3_2017e155_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -126,
        mantissa: 0xfd4a9a6c_c2b4de0f_95187fbc_7b23405a_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -125,
        mantissa: 0xadbff274_3d8173bf_cf758451_d17ddc12_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -125,
        mantissa: 0xe2c0ee27_39081734_45adb505_49881acc_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0x89893d73_0b4da147_9cc068d9_0466df5b_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xa38eb9ad_23eabc69_6c010dc7_6d6f6ad3_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xbbfc89c6_a1903021_f8f0d9c0_c1004d6b_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xd5c70e25_0f3a4d04_0fc42f21_b652c247_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xee5bec46_f4245543_edcb5e0e_3f61c303_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x8401e3a0_0190a24b_446fa242_b3576c07_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x9058e34a_f8f1d4bc_236756f0_2443a2d1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x9d2166fa_ff5eb4e8_0da55c08_a2ad07a8_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xa9812a49_0c466a72_3628820a_51d726a6_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xb64197eb_bd603b94_ea1019ea_75071211_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xc2a7d181_c10650a9_7baf812d_902b3e46_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xcf62379f_400a2f7e_0fd6a131_fa8945f0_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xdbcd6774_67dbe718_767820ae_26dd1f44_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xe883224b_0b627a15_562fd94e_971537db_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xf4f24030_2941dfc3_0b11f705_3d347846_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x80d22107_255f73a5_e3155151_e5d892e3_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x870b483f_c7daacd2_82a82102_617f3d05_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x8d62c464_a213c7cc_45d50ff9_25debfa4_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x939d3d9a_d3d7f924_81e87adf_e5728360_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x99f3767a_e59104c7_8457834d_d50a09ba_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xa02f0c1c_9d7da9a8_ffacaac8_460e01b5_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xa68433f6_109f9515_8900655b_5e80e9a0_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xacc0bc3e_b346d87f_918feb38_b06e7e1f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xb314fa70_f0190b85_d6ddc7c9_8e042c17_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xb952542e_618bedb3_8de1b41f_c6aa4a1f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xbfa5c826_e4d297ca_0422f662_55b48e77_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xc5e3d887_69cafe33_9981aa85_e88e1e1a_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xcc369bc2_915b8377_95352db8_354bd3b1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xd2754ccb_daf5504d_ddc5f4bc_dbdd757b_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xd8c7743d_a737fc41_cf46ecb7_f33e383f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xdf06b3b3_689eef4b_abdf2ea8_7ffc6b1b_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xe55850cb_45910bb1_50f1d21d_b471f3c5_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xeb980f61_5f8b71dc_c8dd083c_434699b9_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xf1e930c9_1343a494_74e9bb0d_6a192158_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xf829618a_368ecd4d_cc957993_351501b6_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xfe7a13b4_c18097f4_25599c4d_0177b3b7_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x825d55c7_217c758e_c0d144c4_0bcdb6aa_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x85857c92_41dfa6e6_aacb2f94_f7661be1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x88a5f746_87a5e758_f802fa31_68b9cc60_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x8bcdf060_c78705c7_f126991d_5358881d_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x8eee95b9_cc31b2ba_1bc86205_b537adc7_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x92166522_0247be75_b0e61b82_f4233602_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x95373183_78e841b3_79dbe48b_8f49ccd7_u128,
    },
];