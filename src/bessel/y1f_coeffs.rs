/*
 * // Copyright (c) Radzivon Bartoshyk 7/2025. All rights reserved.
 * //
 * // Redistribution and use in source and binary forms, with or without modification,
 * // are permitted provided that the following conditions are met:
 * //
 * // 1.  Redistributions of source code must retain the above copyright notice, this
 * // list of conditions and the following disclaimer.
 * //
 * // 2.  Redistributions in binary form must reproduce the above copyright notice,
 * // this list of conditions and the following disclaimer in the documentation
 * // and/or other materials provided with the distribution.
 * //
 * // 3.  Neither the name of the copyright holder nor the names of its
 * // contributors may be used to endorse or promote products derived from
 * // this software without specific prior written permission.
 * //
 * // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
Y1 zeros and extremum on [0, 52] interval
Generated by SageMath:
```python
R120 = RealField(120)

zeros = []

mp.prec = 150

step = mpf("0.1")
epsilon = mpf("1e-35")
x = mpf("1.25")

previous_zero = R120(0)
y1_zeros = []

while x < mpf("52.0"):
    f1 = bessely(1, x)
    f2 = bessely(1, x + step)
    if f1 * f2 < 0:
        zero = findroot(lambda t: bessely(1, t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        previous_zero = zero
        y1_zeros.append(zero)
    if previous_zero is not None and abs(x - mpf(f'{round(x)}')) < epsilon:
        zeros.append(previous_zero)
    x += step

y1_extrema = []

x = mpf("1.25")
while x < mpf("52.0"):
    d1 = mp.diff(lambda t: bessely(1, t), x)
    d2 = mp.diff(lambda t: bessely(1, t), x + step)
    if d1 * d2 < 0:
        extremum = findroot(lambda t: mp.diff(lambda u: bessely(1, u), t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        y1_extrema.append(extremum)
    x += step

y1_zeros.extend(y1_extrema)

y1_zeros = sorted(y1_zeros)

print(f"pub(crate) static Y1_ZEROS: [(u64, u64); {len(y1_zeros)}] = [")
print(f"(0x0, 0x0),")
for z in y1_zeros:
    k = split_double_double(z)
    hi = double_to_hex(k[1])
    lo = double_to_hex(k[0])
    print(f"({lo}, {hi}),")

print("];")
```
**/
pub(crate) static Y1_ZEROS: [(u64, u64); 33] = [
    (0x0, 0x0), // not really used, just a stab to avoid indices messing
    (0xbc8bd1e50d219bfd, 0x400193bed4dff243),
    (0x3c53bac0714e4129, 0x400d76d4affba175),
    (0x3cbdfe7bac228e8c, 0x4015b7fe4e87b02e),
    (0x3ca7960b6b1c46ac, 0x401bc41890588553),
    (0x3cb479cc068d9046, 0x40213127ae6169b4),
    (0x3cc8f4ba5d68e440, 0x40243f2ee51e8c7e),
    (0x3c80fc786ce06080, 0x40277f9138d43206),
    (0xbcaf6ef7a3571593, 0x402a924ee4a3e52c),
    (0xbcc5e091a50f8e05, 0x402dcb7d88de848b),
    (0x3cc07320221cd5e5, 0x403070a7a43daae6),
    (0xbcda1ee4c5487ede, 0x40320b1c695f1e3b),
    (0xbcd2903124fef7e3, 0x4033971a15717510),
    (0x3cd391b14410528f, 0x40353025492188cd),
    (0xbcc15ec09721b746, 0x4036bcefd7de87a3),
    (0x3cb52f75f025b205, 0x403854fa303820ca),
    (0x3cb6f57f7696f493, 0x4039e262715f12a9),
    (0xbcbcf130fbea3b24, 0x403b79acee8cfb7d),
    (0xbc912142b10a5c65, 0x403d079247e8f51b),
    (0xbc9e7a77047d6166, 0x403e9e480605283c),
    (0x3cb1452eb07cd937, 0x40401649819af8fa),
    (0xbce96beabef7ecf4, 0x4040e16907f8fb56),
    (0x3cec6086fb5dd335, 0x4041a8b8a142d536),
    (0x3cd2481e87adfe57, 0x404273a7b35a7aff),
    (0x3cd7df5b6f701c7a, 0x40433b1ac0375e31),
    (0x3cda8ffacaac8461, 0x404405e18393afb5),
    (0xbce5b5acaff0a867, 0x4044cd72d2adfb0c),
    (0x3cbfe463face2c1c, 0x4045981787d668db),
    (0xbcefcba6ea61df1b, 0x40465fc2f7ca5b81),
    (0xbce26390f25f01cb, 0x40472a4a85cc317e),
    (0xbcbba46ca6ef9b6f, 0x4047f20cbfc32967),
    (0xbcdcc667e557a177, 0x4048bc7b10ed3960),
    (0x3cea473d4f209faf, 0x4049845158040451),
];

/**
Value at zero or extremum of Y1 belongs to [Y1_ZEROS]
Generated by MPFR:
```text
let mut arr = vec![];
for zeros in Y1_ZEROS.iter() {
    if zeros.1 == 0 {
        arr.push(0);
    } else {
        let mpfr = Float::with_val(107, f64::from_bits(zeros.1)).y1();
        arr.push(mpfr.to_f64().to_bits());
    }
}
println!(
    "arr: [{}]",
    arr.iter()
        .map(|x| format!("0x{:016x}", x))
        .collect::<Vec<_>>()
        .join(", ")
);
```
**/
pub(crate) static Y1_ZEROS_VALUES: [u64; 33] = [
    0x0000000000000000,
    0x3c7cf9f8d5e1a475,
    0x3fdaabb4011ed330,
    0x3ca46a40b234169c,
    0xbfd36732d4b96094,
    0xbc963bc010b45f46,
    0x3fd00ef3745e0e3c,
    0x3c5f96d32c02f147,
    0xbfcc075da85beb4f,
    0x3ca213201464272b,
    0x3fc931a5a0ae5aa0,
    0xbcb39d4c41d5839f,
    0xbfc713fc51664c74,
    0xbcab20138dd047ec,
    0x3fc56b97f8091ac5,
    0x3c8b67dbfd3bd179,
    0xbfc413644356a52b,
    0x3c919e290514c619,
    0x3fc2f4e70d6c7e01,
    0xbc719366994a86bc,
    0xbfc20198200b699d,
    0x3cbbec2345ac18e2,
    0x3fc12f9870d68e18,
    0x3ca334eb74fdcfd1,
    0xbfc077eede4a0d89,
    0xbcaaca291aee3c35,
    0x3fbfab0b166d23d8,
    0x3c8ef92aa9c8e53c,
    0xbfbe891b327da16d,
    0x3cb13e3c695ea088,
    0x3fbd84391bb2748d,
    0xbcaa1c861fdd1438,
    0xbfbc97d79918527d,
];

/**
Series expansion at point for Y1

Generated by SageMath and Sollya:
```python
def compute_intervals(zeros):
    intervals = []
    for i in range(0, len(zeros)):
        if i == 0:
            a = 1.35 - zeros[i]
            b = (zeros[i] + zeros[i + 1]) / 2 + 0.05 - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
        elif i + 1 > len(zeros) - 1:
            a = (zeros[i - 1] + zeros[i]) / 2 - 0.05 - zeros[i]
            b = (zeros[i]) + 0.83 + 0.05 - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
        else:
            a = (zeros[i - 1] + zeros[i]) / 2 - zeros[i] - 0.05
            b = (zeros[i] + zeros[i + 1]) / 2 + 0.05  - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
    return intervals

intervals = compute_intervals(y1_zeros)

def build_sollya_script(a, b, zero, deg):
    return f"""
prec = 250;
bessel_y1 = library("./notes/bessel_sollya/cmake-build-release/libbessel_sollya.dylib");
f = bessel_y1(x + {zero});
d = [{a}, {b}];
pf = remez(f, {deg}, d);
for i from 0 to degree(pf) do {{
    write(coeff(pf, i)) >> "coefficients.txt";
    write("\\n") >> "coefficients.txt";
}};
"""

def load_coefficients(filename):
    with open(filename, "r") as f:
        return [RR(line.strip()) for line in f if line.strip()]

def call_sollya_on_interval(a, b, zero, degree=12):
    sollya_script = build_sollya_script(a, b, zero, degree)
    with open("tmp_interval.sollya", "w") as f:
        f.write(sollya_script)
    import subprocess
    if os.path.exists("coefficients.txt"):
        os.remove("coefficients.txt")
    try:
        result = subprocess.run(
            ["sollya", "tmp_interval.sollya"],
            check=True,
            capture_output=True,
            text=True
        )
    except subprocess.CalledProcessError as e:
        return

degree = 21

print(f"pub(crate) static Y1F_COEFFS: [[u64;{degree + 1}]; {len(intervals)}] = [")
for i in range(0, len(intervals)):
    interval = intervals[i]
    call_sollya_on_interval(interval[0], interval[1], interval[2], degree)
    coeffs = load_coefficients(f"coefficients.txt")
    print("[")
    for c in coeffs:
        print(double_to_hex(c) + ",")
    print("],")
print("];")
```
**/
pub(crate) static Y1F_COEFFS: [[u64; 22]; 32] = [
    [
        0xbc970a4da737023e,
        0x3fe0aa48442f0172,
        0xbfbe56f82217b0e3,
        0xbfa0d2af4e9444c5,
        0xbf73a6dec3908f7a,
        0x3f7e671c7e4dc415,
        0xbf65429dc02aca8e,
        0x3f517ab46059ac74,
        0xbf40b2d97f7d8ceb,
        0x3f2eea91ab358505,
        0xbf1c3f7428baff7e,
        0x3f09cf9fb918b3e3,
        0xbef79968ff5fad9a,
        0x3ee59f203142cb12,
        0xbed3757159912857,
        0x3ec110f91d0a127c,
        0xbeb195cf74e4e3bd,
        0x3ea36d370af1ab0e,
        0xbe800a6326f15565,
        0xbe520ffcad786d29,
        0xbe78112b5d26fa5a,
        0x3e70b9165d51777c,
    ],
    [
        0x3fdaabb4011ed330,
        0xbbdb7da652f36fe7,
        0xbfc8b45babe797ba,
        0x3f8e147099a6f0ec,
        0x3f88c5af1eeb2d69,
        0xbf4133fa47da55db,
        0xbf3bf8af93ff06c0,
        0x3f021d64be658bc7,
        0x3eb44d2ce6383a2f,
        0x3eb14c3aafe49db8,
        0xbe9b8eee4a4706c9,
        0x3e7a85f28108dd82,
        0xbe5bf86dfc1d1470,
        0x3e3f01691cfd218e,
        0xbe20fa7ddcdd4083,
        0x3e0283ef1c1dbc3b,
        0xbde4348a08635d71,
        0x3dc5cec0c9807cf8,
        0xbda7356933eb5e97,
        0x3d8b7f8be03f5537,
        0xbd721b0ee6a208be,
        0x3d4ce74ece9317b8,
    ],
    [
        0x3a984d7eb22c2e5f,
        0xbfd5c7c556f0c19a,
        0x3fa00b9f8571ca1f,
        0x3faa15d92dfe3e27,
        0xbf710a329e2c23fa,
        0xbf61be6db9923acf,
        0x3f2337c7e138f484,
        0x3f085b940eb607ce,
        0xbec80619147b78e5,
        0xbea255e6cf70779a,
        0x3e5b62cd02026dd3,
        0x3e380b1aab2a1b55,
        0xbdfa7ee05d126c26,
        0x3d840671576ba660,
        0xbd9384738d6d8ac2,
        0x3d7497b719867e9f,
        0xbd4c01de704d2cd0,
        0x3d240f793e87a20a,
        0xbcfdc54570c1d11b,
        0x3cd51d4d90d07123,
        0xbcb24b32decf7d92,
        0x3c9210312d472f7f,
    ],
    [
        0xbfd36732d4b96094,
        0xba7a29a425dd5dcb,
        0x3fc3001c8002caf8,
        0xbf7bf5a03bab4999,
        0xbf8751ea028c1953,
        0x3f423874cd8d0401,
        0x3f364f6610d64939,
        0xbef02978de3838b9,
        0xbed72f0766d0d592,
        0x3e8f2081874c7dd7,
        0x3e6defd5dce00a65,
        0xbe2205c6fe8eb557,
        0xbdfb6432e00e39ef,
        0x3db0289fcd9aafab,
        0x3d80778a39211d24,
        0xbd29723d5ab91954,
        0xbd082f54c3ce17e9,
        0x3cc79fea80b85be6,
        0xbc8519daf0d07148,
        0x3c62ef5a8b95dfdf,
        0xbc3aa18ce94989a9,
        0x3c0af9cafcd8d719,
    ],
    [
        0xb9c642ef9295bb3b,
        0x3fd15f993fceab5c,
        0xbf902b3933cf21b1,
        0xbfa6395dfe49fcd4,
        0x3f63ced2a2e69180,
        0x3f607a678d6000bb,
        0xbf1b50d7e1d32020,
        0xbf06f7bab104f355,
        0x3ec176e72bf94b8f,
        0x3ea2becb2b6bbc6d,
        0xbe5a384eebfe1351,
        0xbe341e7a923c3b54,
        0x3de9e3284f5da273,
        0x3dbec40b62410491,
        0xbd726868b7fff91d,
        0xbd416f7aea66eadf,
        0x3cf318651eb911ad,
        0x3cbfacb19d174207,
        0xbc713c46df0fcfc6,
        0xbc33cf9cc567fa02,
        0x3bd8f01f14a51974,
        0x3bb5cfa9ab48dd51,
    ],
    [
        0x3fd00ef3745e0e3c,
        0xb9f7cb2d23c7b9da,
        0xbfbfcdacdda138f2,
        0x3f706cc34cd829fa,
        0x3f84641bb10c16cb,
        0xbf37fac943e2a16d,
        0xbf34769ed32e14a2,
        0x3ee80608ecda1520,
        0x3ed5cc8242d77e79,
        0xbe888c8f253923cc,
        0xbe6ce5908c1f1371,
        0x3e1ed1625825efc6,
        0x3dfa30d624f103cf,
        0xbdaa50765ef9816e,
        0xbd814cd364e06f80,
        0x3d306199dc6ecdf5,
        0x3d016414f48e7135,
        0xbcaefb13968ddffb,
        0xbc7ba107aed4e181,
        0x3c27658ab44a43f4,
        0x3bf16670c14a7e11,
        0xbb9c5a4d1e24f1d8,
    ],
    [
        0x39abc4eba80a0abf,
        0xbfcdc14ea14e89f9,
        0x3f84429fef5b5fbd,
        0x3fa367d7d608e4ba,
        0xbf59d6eb2bc49e35,
        0xbf5dc4f991b3db86,
        0x3f1315ec04d6e6bc,
        0x3f0571814a1aa301,
        0xbeba2977fa42f227,
        0xbea1e86423086328,
        0x3e54a7b82d41f68a,
        0x3e3390660a1bb765,
        0xbde549e8b3ed0638,
        0xbdbe32cf77b3930b,
        0x3d6eff58d537e222,
        0x3d415e5c0b3e77db,
        0xbcf0d67f75c969a4,
        0xbcbef3f34fb40b2e,
        0x3c6c60aca5de9b78,
        0x3c3605765444260e,
        0xbbe2fcec4423619b,
        0xbba9ae2df2f7dd74,
    ],
    [
        0xbfcc075da85beb4f,
        0x39f15f9420f5be15,
        0x3fbbdeb6ff9f55e1,
        0xbf661eefb74da882,
        0xbf8229ea914b846e,
        0x3f30cbcc6778fd37,
        0x3f32aa59f5091f7b,
        0xbee1c15d5251ae6a,
        0xbed4583f15abd692,
        0x3e831d151a1284aa,
        0x3e6b74e57c226d37,
        0xbe19044f1378d484,
        0xbdf93b1ec7caf30f,
        0x3da61a4e89c07d70,
        0x3d80d430f7d87f54,
        0xbd2c3b0a915fa701,
        0xbd010e771c3e5fca,
        0x3cab59434c99eeac,
        0x3c7b2e30701e060f,
        0xbc24d32922820f96,
        0xbbf15988d491f657,
        0x3b9a5578c5f5e669,
    ],
    [
        0xb9a558c7db133323,
        0x3fca7022be084d99,
        0xbf7c650b6b83109a,
        0xbfa163191c30aa62,
        0x3f526b045287ddca,
        0x3f5b17602840abf5,
        0xbf0c0a9cee3c842a,
        0xbf03e398cbc472ea,
        0x3eb3f35db1ff1b8e,
        0x3ea0e9b612dbd385,
        0xbe5056babcd96325,
        0xbe32c1a8c8f963b5,
        0x3de161b6aa9fd2a5,
        0x3dbd4caa1e01930a,
        0xbd69fdda130ec034,
        0xbd4101c31e4abd1b,
        0x3cecdc25717c6650,
        0x3cbe8702bdb87e5a,
        0xbc68c5c754326efa,
        0xbc35d4d64b7336ab,
        0x3be0cfe6958f3707,
        0x3ba97e6f7f66d295,
    ],
    [
        0x3fc931a5a0ae5aa0,
        0xb9eb8f902c897a2d,
        0xbfb919c8a3f203fa,
        0x3f602a38da6262a9,
        0x3f807ced48910819,
        0xbf2900f33a00690a,
        0xbf31278d46fd153c,
        0x3edb2595529cf1c7,
        0x3ed2f7c2d608e0eb,
        0xbe7e212d2378b577,
        0xbe69f3fcf3638b55,
        0x3e144fbf0377ce7a,
        0x3df82268e83f4388,
        0xbda26cc2b02e8dc1,
        0xbd80418bae7c89a3,
        0x3d2812815fe603ca,
        0x3d009b2aadf1c05c,
        0xbca7c55ed09bd823,
        0xbc7aa12eed3b607c,
        0x3c22657a1ef0b832,
        0x3bf114bb0517c116,
        0xbb977d80c57cb4c7,
    ],
    [
        0x39a06c45a33bbceb,
        0xbfc80781c32422e7,
        0x3f754eda697a0098,
        0x3f9fbe6df840847f,
        0xbf4be318d61276e1,
        0xbf58efee4094379c,
        0x3f059145b4f0e4de,
        0x3f0282d26a74c38e,
        0xbeaf56c29d9ad959,
        0xbe9fdd03174f902a,
        0x3e4a44a7907fee4f,
        0x3e31df65332ab3ee,
        0xbddc96e9cf360510,
        0xbdbc3439f3fae61d,
        0x3d65d38ae4ee880a,
        0x3d40833ea214b5b4,
        0xbce8afb6de8db385,
        0xbcbdda415867f815,
        0x3c658861a03bd7d6,
        0x3c357941126d60e3,
        0xbbdda19c525563d6,
        0xbba923ab128ff73e,
    ],
    [
        0xbfc713fc51664c74,
        0x39e6f03ac7ebc6a7,
        0x3fb7049760cde490,
        0xbf58ef5f1cbe4874,
        0xbf7e5f53caf3bead,
        0x3f237b0b62ddadd1,
        0x3f2fd3bac08286da,
        0xbed5789803de3afe,
        0xbed1c0faa89993b9,
        0x3e7845b49b0674ba,
        0x3e68868728013967,
        0xbe10b036779ac0da,
        0xbdf7049d1835414a,
        0x3d9edd9d0fb432cd,
        0x3d7f44600939bcbf,
        0xbd2486b1d7e6590a,
        0xbd00160240967757,
        0x3ca498b5460af3ef,
        0x3c79f443741cc35a,
        0xbc202aa48886dbfd,
        0xbbf0bb86971d175e,
        0x3b94da12e9fe5c1a,
    ],
    [
        0xb9a4fe1e7fccc099,
        0x3fc62d94d97e859c,
        0xbf70bf614807033c,
        0xbf9d5f857a2a6107,
        0x3f46081b0b7fe572,
        0x3f57307b03e248f8,
        0xbf0132c0aa83d0dc,
        0xbf0154ed4598d2f0,
        0x3ea94f64f476e615,
        0x3e9e12725853a9fb,
        0xbe4588c758dfc8a1,
        0xbe31021cdd9b5f87,
        0x3dd7cfa7a6c25856,
        0x3dbb0e011d240a91,
        0xbd6276cc0f8cdfbc,
        0xbd3fe92f08a65b61,
        0x3ce53126ac77281b,
        0x3cbd07f6e235e8c3,
        0xbc62bbf578076c87,
        0xbc34ffbce7b5db80,
        0x3bda1718b30c9476,
        0x3ba8a9fd2273abd3,
    ],
    [
        0x3fc56b97f8091ac5,
        0xb9e352ca58ef8182,
        0xbfb560fcc8c08469,
        0x3f53fafa39618883,
        0x3f7c49141623372f,
        0xbf1f69980694fd17,
        0xbf2dc5f848aa9d34,
        0x3ed178fc979b77bd,
        0x3ed0b494a4bafcc7,
        0xbe73fc3884c2743b,
        0xbe673afb9fb4d83e,
        0x3e0bd90346a3e19e,
        0x3df5f3bafb215029,
        0xbd9a1c27c3767cfa,
        0xbd7e0455dbdbf5eb,
        0x3d2199b1a0d58629,
        0x3cff13342d14e1d0,
        0xbca1e3739e87c9e5,
        0xbc793507c967621e,
        0x3c1c6a72a6db277b,
        0x3bf0542bf9986ffe,
        0xbb927ebd4ef3c933,
    ],
    [
        0x39a0ee5f03eca2b4,
        0xbfc4b2a38f1ab9b4,
        0x3f6b3878aadeb34d,
        0x3f9b750d89a9b35f,
        0xbf41f6911725a956,
        0xbf55beee6fd51c8a,
        0x3efc3625d7a65089,
        0x3f005375a588a72b,
        0xbea4ee5e4e7cb18b,
        0xbe9c7b3d81b5ff94,
        0x3e41fce14f485184,
        0x3e30346643c9d872,
        0xbdd41c861bc1b250,
        0xbdb9eeda214eb8e4,
        0x3d5f8cf277a0d6de,
        0x3d3ec46e14e256d1,
        0xbce250015a706314,
        0xbcbc24c2c2826fd8,
        0x3c605d72025e1f75,
        0x3c34752a9f61ea1b,
        0xbbd705400e09426a,
        0xbba81be8d02bf936,
    ],
    [
        0xbfc413644356a52b,
        0x39e05283caf16f76,
        0x3fb40bb88c6f2b85,
        0xbf5078d13cfc400e,
        0xbf7a9191262ab9d5,
        0x3f1a005297618f35,
        0x3f2c0cbad847a60e,
        0xbecd1a72e7c35fd8,
        0xbecf9a2654099c40,
        0x3e70c6b06e20fcbf,
        0x3e66136d6425ea6e,
        0xbe07977677c6bb75,
        0xbdf4f77b31439836,
        0x3d965720b0a45985,
        0x3d7cd126dc406e48,
        0xbd1e6d575c1d58e0,
        0xbcfdfb4cd95f363b,
        0x3c9f3cced487f2fa,
        0x3c786f264793c9fc,
        0xbc190ce1cb2c608c,
        0xbbefca75e74d717f,
        0x3b906f78ecdcdb70,
    ],
    [
        0xb998a424b7835bba,
        0x3fc37aaceac987b9,
        0xbf66afe4fe0bc0f7,
        0xbf99de7a33bc3a97,
        0x3f3e024f567ac487,
        0x3f548843c426abe0,
        0xbef7a8e14711c0f5,
        0xbefeeceb341ad833,
        0x3ea1a743e05b39ca,
        0x3e9b143d39c90dd5,
        0xbe3e8e00012321c5,
        0xbe2ef28e323e749c,
        0x3dd137a1bf5bcef9,
        0x3db8e087c7cb86fb,
        0xbd5b3dc9dd0e1599,
        0xbd3da6ae03e99f02,
        0x3cdfe64e3d199b32,
        0x3cbb3e899d98021a,
        0xbc5cc1093689396b,
        0xbc33e33e0f5cd5fa,
        0x3bd46436764f7651,
        0x3ba782d2e58eeef5,
    ],
    [
        0x3fc2f4e70d6c7e01,
        0xb9dd08546797919c,
        0xbfb2ef24d6f7526a,
        0x3f4bc33c9dc6ec82,
        0x3f7920414ee2acbe,
        0xbf15f9173916a219,
        0xbf2a94fdbdcec471,
        0x3ec8b309990f950c,
        0x3ece087ff4517c02,
        0xbe6ca22ab12cb4b7,
        0xbe650d1f28635cd5,
        0x3e04441552e25a2c,
        0x3df411b8a8257ea8,
        0xbd9354e914c3e7e7,
        0xbd7bb16f1102118e,
        0x3d1a8885386e9090,
        0x3cfced723aa27a94,
        0xbc9b745f453eb6a9,
        0xbc77aab56c820e42,
        0x3c16301b968b81ee,
        0x3beee7b5baa9dded,
        0xbb8d4ff47bf08d4a,
    ],
    [
        0x399f013841229a6f,
        0xbfc2740819f1caaa,
        0x3f6349369dc780bb,
        0x3f98868d7401bf2e,
        0xbf398cd1bebe1445,
        0xbf537eef9aadeee2,
        0x3ef43394c95b2d2b,
        0x3efd6dfcdb026028,
        0xbe9e448fbc8a1f43,
        0xbe99d764ee07c839,
        0x3e3a53958c8d74f2,
        0x3e2da0e1c8a08d3b,
        0xbdcdd7f918de5c25,
        0xbdb7e68037d5cc70,
        0x3d57c2e63b9992c3,
        0x3d3c973a176351a4,
        0xbcdc03374989de68,
        0xbcba5d9f2652ba86,
        0x3c596c75cc9f1eab,
        0x3c33507fede7d877,
        0xbbd226b38118adf9,
        0xbba6e5b79056da26,
    ],
    [
        0xbfc20198200b699d,
        0x39d95760a156da3c,
        0x3fb1fd242a74e630,
        0xbf47cf261dfbf19a,
        0xbf77e4820ec1dde4,
        0x3f12e1bd281dfcbb,
        0x3f2950bb06c6fdf9,
        0xbec54a38ab6af546,
        0xbecca94f38024fdc,
        0x3e68c7e75971c85c,
        0x3e6423fc7e251ca4,
        0xbe019fe1d8e51c0a,
        0xbdf34198c79509bd,
        0x3d90e78cdab32159,
        0x3d7aa74cb59e4c88,
        0xbd1756ee84c4c3f1,
        0xbcfbee3c9b6ad0c6,
        0x3c984c94f849d9b3,
        0x3c76ec9ee956c332,
        0xbc13c2ad8c650a80,
        0xbbee072bc121dce1,
        0x3b8a4080a0c34946,
    ],
    [
        0xb9934a75045a894f,
        0x3fc192f2627a74e3,
        0xbf60a846a83fecf2,
        0xbf975eceaabf7f86,
        0x3f3617c581be35b1,
        0x3f529934b7a84483,
        0xbef18123e875188a,
        0xbefc1f05a2d85165,
        0x3e9a4e0bc0926544,
        0x3e98be81ad44d933,
        0xbe36f73795e25bf5,
        0xbe2c70ab158cd19c,
        0x3dca262190471505,
        0x3db70112aab52d06,
        0xbd54ec163f67cc61,
        0xbd3b991575a7d292,
        0x3cd8cbab7538845c,
        0x3cb9867f12e567cb,
        0xbc56a088cad22ac1,
        0xbc32c0fb038251c6,
        0x3bd03e3bd6a46aff,
        0x3ba64968690ae20d,
    ],
    [
        0x3fc12f9870d68e18,
        0xb9d6399278b0ca4a,
        0xbfb12c11811945f9,
        0x3f44b638f21f0f76,
        0x3f76d2a897d58353,
        0xbf10732e5458ba20,
        0xbf2835929300df3f,
        0x3ec297283816a83b,
        0x3ecb73adedf11a43,
        0xbe65b455b903f09d,
        0xbe6353f0797a6694,
        0x3dfefc9ac17b1fb9,
        0x3df28535463cd637,
        0xbd8dd894cbc02217,
        0xbd79b288cc1ddaa8,
        0x3d14b2ec9c01a841,
        0x3cfaff72c6f36ebc,
        0xbc95a7c114d906cb,
        0xbc763785502db41e,
        0x3c11b2f99a1064c8,
        0x3bed2d43f2301cda,
        0xbb879f81a3b4a7fd,
    ],
    [
        0x39982e333ba2bfb1,
        0xbfc0cf3ee98f769b,
        0x3f5d26e7af251f79,
        0x3f965d05948a946a,
        0xbf335959b8482e40,
        0xbf51cff175d05c2a,
        0x3eeeb59416879106,
        0x3efaf7544eeac766,
        0xbe9720522bb1fc81,
        0xbe97c41261705419,
        0x3e343fa0ea5e0072,
        0x3e2b5e23abebd7a4,
        0xbdc722397e74ecd5,
        0xbdb62f2174e6bd7c,
        0x3d5294ab05ec47c4,
        0x3d3aace9440e1ff2,
        0xbcd61cc7e11509b9,
        0xbcb8bb3c16c1bc39,
        0x3c544466a5334a33,
        0x3c3236fba6a63b03,
        0xbbcd3a6b528d2d5b,
        0xbba5b0f514513014,
    ],
    [
        0xbfc077eede4a0d89,
        0x39d3e848a3308d54,
        0x3fb0751548b2924d,
        0xbf423b5d46a73864,
        0xbf75e2467c8fb832,
        0x3f0cfe5c189d6e4d,
        0x3f273bbd8c7aef2d,
        0xbec06974d3d04287,
        0xbeca6081d36e6a2b,
        0x3e6334a83cf6092b,
        0x3e6299571cb4e1f6,
        0xbdfb7f5bc0aadb08,
        0xbdf1da63b4d6ee88,
        0x3d8a9288cecdf606,
        0x3d78d1d74c6e49b4,
        0xbd127eed3b5ace3c,
        0xbcfa2143428634da,
        0x3c936d15a5478f54,
        0x3c758c928d0cf200,
        0xbc0fe25cc97ff44b,
        0xbbec5c7e79a33a49,
        0x3b855c2684c03e5c,
    ],
    [
        0xb9925b597b049b0f,
        0x3fc0230ba90f2871,
        0xbf59ca16f0c9734e,
        0xbf9579c1bdbcfc99,
        0x3f3120ecfac5c017,
        0x3f511dd26bbe2946,
        0xbeeb37e7c9a57149,
        0xbef9f01e7c1909a0,
        0x3e94887fe7a88c2c,
        0x3e96e37238841d4b,
        0xbe3204b644d6a041,
        0xbe2a659b13eebf8a,
        0x3dc4a40c87600864,
        0x3db56f0250e4fa50,
        0xbd50a1011bd9948d,
        0xbd39d22a6dbcb6d7,
        0x3cd3db0eeb377b05,
        0x3cb7fc7d2cd6fe13,
        0xbc52437895905136,
        0xbc31b3aa99bc512f,
        0x3bca6f775b0cf143,
        0x3ba51e292c22fbde,
    ],
    [
        0x3fbfab0b166d23d8,
        0xb9d1ee64c5ff9087,
        0xbfafa65c1ce7ebd6,
        0x3f4035bf503ffc1f,
        0x3f750d1b04713c41,
        0xbf09cd14a92842a2,
        0xbf265d504af5d8fe,
        0x3ebd3feeb33d9cee,
        0x3ec96a257062f76e,
        0xbe61254f302b36b2,
        0xbe61f11585e04fc5,
        0x3df89a7674dd9973,
        0x3df13f0ba48c0ce0,
        0xbd87d67b47fe266b,
        0xbd7803818110dc66,
        0x3d10a41214a86c38,
        0x3cf95306e834a4fa,
        0xbc918885ca7cdd3a,
        0xbc74ec0d03cf354b,
        0x3c0cdfb82b2d1f67,
        0x3beb9612bc5bf3f0,
        0xbb8367e59e31b708,
    ],
    [
        0x398abaf6b92e4ee7,
        0xbfbf13fb0c0e6fcd,
        0x3f5706ed3d935d00,
        0x3f94af74cbd77bef,
        0xbf2e9a9e66e5a792,
        0xbf507ec9ed824fcb,
        0x3ee856d4518ab29e,
        0x3ef9040de830649e,
        0xbe9262f69c56c652,
        0xbe9618c94a54734d,
        0x3e3029d2c8bf70cd,
        0x3e2983bca0a3e67b,
        0xbdc28e2a00001814,
        0xbdb4beeacafc4c27,
        0x3d4df880e348e9ad,
        0x3d3907be42fa2b80,
        0xbcd1f10fcbfa244d,
        0xbcb74a1db11631e2,
        0x3c508d138d8dc922,
        0x3c31377af053ec95,
        0xbbc8078c93337e49,
        0xbba491f900bcad3c,
    ],
    [
        0xbfbe891b327da16d,
        0x39d0550eb4b45282,
        0x3fae8533ce07bdb8,
        0xbf3d1253218e31b0,
        0xbf744e6826476498,
        0x3f07271a9b5e3cb4,
        0x3f2595b697c8ec04,
        0xbeba46b03ecb38cc,
        0xbec88c173e07621e,
        0x3e5ed9b1754fbd3d,
        0x3e615891ef314e13,
        0xbdf62ca352cf90e4,
        0xbdf0b14767c2a69a,
        0x3d85879bb4a39038,
        0x3d7745bbca41b2b1,
        0xbd0e21736c77c2b3,
        0xbcf893b22a5a58c1,
        0x3c8fd42e8aa4a029,
        0x3c7455b94d8080e4,
        0xbc0a47cb250918d3,
        0xbbeada6797bafd2f,
        0x3b81b5c35f611330,
    ],
    [
        0xb9888a60f4421e79,
        0x3fbe018dac1c17e3,
        0xbf54b994dd05c1fb,
        0xbf93f9e0db07e7ef,
        0x3f2b8e55b75b13ab,
        0x3f4fdf68a78bb3d2,
        0xbee5ee9d17106a08,
        0xbef82ee6dfdfedeb,
        0x3e90962d7f6d61a6,
        0x3e9560edce7d682d,
        0xbe2d34381d02bdae,
        0xbe28b5a0e74ae0d1,
        0x3dc0cab953f0463e,
        0x3db41d21c68d7a67,
        0xbd4b2d2dd79dfc8f,
        0xbd384c5369c61abf,
        0x3cd04e17842e908c,
        0x3cb6a38df320a922,
        0xbc4e27b63fed0b9b,
        0xbc30c272dca61830,
        0x3bc5f214eec3e08a,
        0x3ba40cc430a66273,
    ],
    [
        0x3fbd84391bb2748d,
        0xb9cd0b62aff12b54,
        0xbfad80edb3c4ea05,
        0x3f3a431f5421f7ef,
        0x3f73a282fe7b63a8,
        0xbf04ed653e607bdd,
        0xbf24e15832bda3c4,
        0x3eb7c5832dd1374f,
        0x3ec7c2b80da8df98,
        0xbe5bf160ccd35446,
        0xbe60cda2141b2a1a,
        0x3df41d31d2a41a6d,
        0x3df02f6ca8500d4d,
        0xbd83901f61061336,
        0xbd7696ce2b5bcbc1,
        0x3d0b6e829b1155eb,
        0x3cf7e2144ecb4140,
        0xbc8d0a39fd8739cc,
        0xbc73c9170a116bcd,
        0x3c0808731f155986,
        0x3bea2964607b941f,
        0xbb803b595e8bcbbf,
    ],
    [
        0x39910b0027f31bcc,
        0xbfbd09b21e36c0bd,
        0x3f52c84acfb586b4,
        0x3f9355b904fbf7ee,
        0xbf28fb570465af0d,
        0xbf4edc3292ba6cfd,
        0x3ee3e552ee8c2577,
        0x3ef76d44f6a83523,
        0xbe8e1ee2dc4a3bd9,
        0xbe94b944bbd4c7bf,
        0x3e2a8c3a4ce36f07,
        0x3e27f8c9ef47068c,
        0xbdbe9295749ec567,
        0xbdb38813c3eb72cb,
        0x3d48c7cda421dc4b,
        0x3d379e9046778350,
        0xbccdca31f80a6ede,
        0xbcb6080bc99f9f0e,
        0x3c4b9a418a8a2758,
        0x3c30545a4f712e1e,
        0xbbc42178a1f5f5f7,
        0xbba38e980332ffe7,
    ],
    [
        0xbfbc97d79918527d,
        0x39faede178ce2ccf,
        0x3fac95081ab2b511,
        0xbf37e0b14f7d7c3f,
        0xbf730688f6836a76,
        0x3f030941f6e78e36,
        0x3f243d5898657a6f,
        0xbeb5a39a94f2ad54,
        0xbec70b18406146f7,
        0x3e597607f9532277,
        0x3e604e788f4f63b4,
        0xbdf25989194741a9,
        0xbdef70154273aa3c,
        0x3d81df5c1ca84590,
        0x3d75f525664c0d2a,
        0xbd091a177864a059,
        0xbcf73cf95d975605,
        0x3c8a9f144fc56dd9,
        0x3c734584399f7b87,
        0xbc0618787c9050d8,
        0xbbe981f5b3009ce6,
        0x3b8073050c4bdb5f,
    ],
];
