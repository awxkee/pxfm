/*
 * // Copyright (c) Radzivon Bartoshyk 8/2025. All rights reserved.
 * //
 * // Redistribution and use in source and binary forms, with or without modification,
 * // are permitted provided that the following conditions are met:
 * //
 * // 1.  Redistributions of source code must retain the above copyright notice, this
 * // list of conditions and the following disclaimer.
 * //
 * // 2.  Redistributions in binary form must reproduce the above copyright notice,
 * // this list of conditions and the following disclaimer in the documentation
 * // and/or other materials provided with the distribution.
 * //
 * // 3.  Neither the name of the copyright holder nor the names of its
 * // contributors may be used to endorse or promote products derived from
 * // this software without specific prior written permission.
 * //
 * // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
use crate::dyadic_float::{DyadicFloat128, DyadicSign};

/**
J0 zeros and extremums.

Generated by SageMath:
```python
R120 = RealField(120)

zeros = []

mp.prec = 200

step = mpf("0.01")
epsilon = mpf("1e-35")
x = mpf("0.0")

def j0_prime(x):
    return diff(lambda t: besselj(0, t), x)

previous_zero = R120(0)
j0_zeros = []

while x < mpf("76.0"):
    f1 = besselj(0, x)
    f2 = besselj(0, x + step)
    if f1 * f2 < 0:
        zero = findroot(lambda t: j0(t), (x, x + step), solver='bisect', tol=mp.mpf("1e-41"))
        previous_zero = zero
        j0_zeros.append(zero)
    if previous_zero is not None and abs(x - mpf(f'{round(x)}')) < epsilon:
        zeros.append(previous_zero)
    x += step

j0_extrema = []

x = mpf("0.0")
while x < mpf("76.0"):
    d1 = mp.diff(lambda t: j0(t), x)
    d2 = mp.diff(lambda t: j0(t), x + step)
    if d1 * d2 < 0:
        extremum = findroot(lambda t: mp.diff(lambda u: j0(u), t), (x, x + step), solver='bisect', tol=mp.mpf("1e-41"))
        j0_extrema.append(extremum)
    x += step

# Print results
for i, z in enumerate(j0_zeros):
    print(f"Zero {i+1}: x â‰ˆ {z}")

print("Extrema (peaks/valleys) of J0(x):")
for e in j0_extrema:
    print(f"nExtrema: {e}")

j0_zeros.extend(j0_extrema)

j0_zeros = sorted(j0_zeros)

print("")

print("pub(crate) static J0_ZEROS_RATIONAL128: [DyadicFloat128; 48] = [")
print(f"DyadicFloat128 {{ sign: DyadicSign::Pos, exponent: 0, mantissa: 0x0u128, }},")
for z in j0_zeros:
    print_dyadic(z)

print("];")
```
**/
pub(crate) static J0_ZEROS_RATIONAL128: [DyadicFloat128; 48] = [
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: 0,
        mantissa: 0x0u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -126,
        mantissa: 0x99e8a974_b8d9fde1_58c504bb_4e3851ec_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -126,
        mantissa: 0xf53aabad_7b78453f_d54ac5c9_b53851ec_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -125,
        mantissa: 0xb0a47ad9_617228ba_82a66b05_28b5c28f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -125,
        mantissa: 0xe07faf9d_a3927f26_ec9316de_3ec51eb8_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0x8a75ab66_66f64eae_68f8eb38_3daccccd_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xa2c68685_efe14a04_c214a2ac_56c8f5c3_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xbcaa2004_1395b144_4fd5821d_5b08f5c3_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xd52dd798_872d112b_ce7fd18e_69347ae1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -124,
        mantissa: 0xeee509f7_938e8cd0_d33ed936_2f651eb8_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x83c3d9b0_2846245a_b2e2eea9_9d166666_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x909189fc_50cfadd3_405dee17_2025c28f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0x9ced473a_0b651dbc_f9fcd02c_2f41eb85_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xa9b16e8b_9fbc911d_2dfa1c3b_5a847ae1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xb614a71e_a6c55ee4_0cc50107_70eeb852_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xc2d1dc98_0ab6ea10_8f8c4002_bbfa3d71_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xcf3ab86e_7508311a_2686480d_8820a3d7_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xdbf2a52f_eaf88ba5_66e292e5_6505c28f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xe85fe7a3_8fe65f5e_98e309b4_482ae148_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -123,
        mantissa: 0xf513ac8e_5df68ec9_44543e36_0cf00000_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x80c23b73_595f7e41_c5e32f99_499dc28f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x871a709d_337f31a3_26cf4307_839570a4_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x8d54486e_2f4bdc54_08801f75_f300f5c3_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x93ab1bd4_b0cf5ef4_9f97079e_390e6666_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0x99e6291e_ae5b48cf_57f65065_27e4cccd_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xa03bd3f6_b149cfb2_cde42c76_1b275c29_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xa677e78b_9a5b10a4_4deaab72_884e6666_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xaccc9632_e86c68f6_a47f4cfa_2f7a8f5c_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xb3098aeb_5899fa9e_e2de62f3_b20428f6_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xb95d607c_08407efa_585fadaf_a70f0a3d_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xbf9b1890_1456ac18_d5eaf7a4_90e1999a_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xc5ee3149_f832baae_bb8ff140_6339eb85_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xcc2c947c_b6a8f30b_af7b6617_5e28a3d7_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xd27f0772_2263d605_e95cc744_51275c29_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xd8be01c6_100c627a_83c08395_4d08a3d7_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xdf0fe20d_26303578_36adf952_a62c7ae1_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xe54f62d4_119259a1_39ce2cd0_8ac4cccd_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xeba0c064_f20fb21e_96392a88_8ffb3333_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xf1e0b98e_b278efbb_46443469_ac7b3333_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xf831a1e8_4b8ea3fe_214d2c0f_555a8f5c_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -122,
        mantissa: 0xfe72077d_88ab71fd_1ee82863_58a1999a_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x82614310_f88f2cec_dc6bf06f_6809c28f_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x8581a6ef_3ada11d3_cacfc720_4188cccd_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x88a9b659_16b95616_f5ad3003_d913ae14_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x8bca46db_1b3ade19_96cfb401_8b840000_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x8ef22aa5_0e16e559_afb127f7_41c63d71_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x9212e3ee_566fb31d_695296c7_26c35c29_u128,
    },
    DyadicFloat128 {
        sign: DyadicSign::Pos,
        exponent: -121,
        mantissa: 0x953a9fd4_102403e0_beb0b086_cea91eb8_u128,
    },
];
