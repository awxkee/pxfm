/*
 * // Copyright (c) Radzivon Bartoshyk 7/2025. All rights reserved.
 * //
 * // Redistribution and use in source and binary forms, with or without modification,
 * // are permitted provided that the following conditions are met:
 * //
 * // 1.  Redistributions of source code must retain the above copyright notice, this
 * // list of conditions and the following disclaimer.
 * //
 * // 2.  Redistributions in binary form must reproduce the above copyright notice,
 * // this list of conditions and the following disclaimer in the documentation
 * // and/or other materials provided with the distribution.
 * //
 * // 3.  Neither the name of the copyright holder nor the names of its
 * // contributors may be used to endorse or promote products derived from
 * // this software without specific prior written permission.
 * //
 * // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
Y0 zeros and extremums.
Generated by SageMath:
```python
R120 = RealField(120)

zeros = []

mp.prec = 150

step = mpf("0.1")
epsilon = mpf("1e-35")
x = mpf("1.25")

previous_zero = R120(0)
y0_zeros = []

while x < mpf("76.0"):
    f1 = bessely(0, x)
    f2 = bessely(0, x + step)
    if f1 * f2 < 0:
        zero = findroot(lambda t: bessely(0, t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        previous_zero = zero
        y0_zeros.append(zero)
    if previous_zero is not None and abs(x - mpf(f'{round(x)}')) < epsilon:
        zeros.append(previous_zero)
    x += step

y0_extrema = []

x = mpf("1.25")
while x < mpf("76.0"):
    d1 = mp.diff(lambda t: bessely(0, t), x)
    d2 = mp.diff(lambda t: bessely(0, t), x + step)
    if d1 * d2 < 0:
        extremum = findroot(lambda t: mp.diff(lambda u: bessely(0, u), t), (x, x + step), solver='secant', tol=mp.mpf("1e-41"))
        y0_extrema.append(extremum)
    x += step

# Print results
for i, z in enumerate(j0_zeros):
    print(f"Zero {i+1}: x ≈ {z}")

print("Extrema (peaks/valleys) of Y0(x):")
for e in y0_extrema:
    print(f"nExtrema: {e}")

y0_zeros.extend(y0_extrema)

y0_zeros = sorted(y0_zeros)

# Print results
for i, z in enumerate(y0_zeros):
    print(f"Peak or zero {i+1}: x ≈ {z}")

print("")

print("pub(crate) static Y0_ZEROS: [(u64, u64); 48] = [")
print(f"(0x0, 0x0),")
for z in y0_zeros:
    k = split_double_double(z)
    hi = double_to_hex(k[1])
    lo = double_to_hex(k[0])
    print(f"({lo}, {hi}),")

print("];")
```
**/
pub(crate) static Y0_ZEROS: [(u64, u64); 48] = [
    (0x0, 0x0), // not really used, just a stab to avoid messing with indices
    (0xbc8bd1e50d219bfd, 0x400193bed4dff243),
    (0xbc9f06ae7804384e, 0x400fa9534d98569c),
    (0x3cbdfe7bac228e8c, 0x4015b7fe4e87b02e),
    (0xbc99774a495f56cf, 0x401c581dc4e72103),
    (0x3cb479cc068d9046, 0x40213127ae6169b4),
    (0xbcccb49ff791c495, 0x402471d735a47d58),
    (0x3c80fc786ce06080, 0x40277f9138d43206),
    (0xbcc7df81de86f24d, 0x402ab8e1c4a1e74a),
    (0xbcc5e091a50f8e05, 0x402dcb7d88de848b),
    (0x3cd25a237d12159b, 0x4030803c74003214),
    (0xbcda1ee4c5487ede, 0x40320b1c695f1e3b),
    (0xbcd8bf92d51fbaeb, 0x4033a42cdf5febd7),
    (0x3cd391b14410528f, 0x40353025492188cd),
    (0x3cdca75080cf53a8, 0x4036c832fd77ac07),
    (0x3cb52f75f025b205, 0x403854fa303820ca),
    (0xbcb03e052bd9c0af, 0x4039ec46f3e80146),
    (0xbcbcf130fbea3b24, 0x403b79acee8cfb7d),
    (0x3cd0aab17eca74b9, 0x403d106449616c4f),
    (0xbc9e7a77047d6166, 0x403e9e480605283c),
    (0x3ced2f18aa8a8f2f, 0x40401a4420e4abee),
    (0xbce96beabef7ecf4, 0x4040e16907f8fb56),
    (0xbca9dd1578036d11, 0x4041ac588c944279),
    (0x3cd2481e87adfe57, 0x404273a7b35a7aff),
    (0xbce9c3dd43e59158, 0x40433e6ecf5cb221),
    (0x3cda8ffacaac8461, 0x404405e18393afb5),
    (0xbce753b7fcd5250c, 0x4044d0867ec213f3),
    (0x3cbfe463face2c1c, 0x4045981787d668db),
    (0x3cec2eb6ee3e4c70, 0x4046629f4e1e0321),
    (0xbce26390f25f01cb, 0x40472a4a85cc317e),
    (0xbcaafdee84ced526, 0x4047f4b904dc9a53),
    (0xbcdcc667e557a177, 0x4048bc7b10ed3960),
    (0x3cebbca9a96dc1aa, 0x404986d378522b70),
    (0x3cb377717d2f36f7, 0x404a4ea9997b5eaa),
    (0xbcedf185c89a4066, 0x404b18ee87b4e700),
    (0xbcc68a841a2af000, 0x404be0d6766d13de),
    (0x3ced8a878e90eda4, 0x404cab0a1968b221),
    (0x3cddcc8dd083c434, 0x404d7301ec2bf16e),
    (0xbceb5c58b22794af, 0x404e3d2619226875),
    (0xbce5919b54336657, 0x404f052c3146d1da),
    (0xbc87b54cc765fd11, 0x404fcf4276983013),
    (0xbcf389f975d9dfa2, 0x40504baab8e42f8f),
    (0xbce195534d06b08a, 0x4050b0af92483bf5),
    (0xbcd4e0ffa0b9d2e9, 0x405114bee8d0f4bd),
    (0xbcf1c076cb371565, 0x405179be0c18f0e1),
    (0x3cf5d0de43102daa, 0x4051ddd2b7398636),
    (0xbce8a4f19e47d0be, 0x405242cca44048f8),
    (0x3ceb379dbe48b8f5, 0x4052a6e6306f1d08),
];

/**
Zeros and extremums solved values for Y0

Generated by MPFR:
```text
let mut arr = vec![];
for zeros in Y0_ZEROS.iter() {
    if zeros.1 == 0 {
        arr.push(0);
    } else {
        let mpfr = Float::with_val(107, f64::from_bits(zeros.1)).y0();
        arr.push(mpfr.to_f64().to_bits());
    }
}
println!(
    "arr: [{}]",
    arr.iter()
        .map(|x| format!("0x{:016x}", x))
        .collect::<Vec<_>>()
        .join(", ")
);
```
**/
pub(crate) static Y0_ZEROS_VALUES: [u64; 48] = [
    0x0000000000000000,
    0x3fe0aa48442f014b,
    0xbc88fa8956b4b481,
    0xbfd5c7c556f0c19a,
    0x3c7e91b198d39ce2,
    0x3fd15f993fceab5c,
    0xbcacabd7c823bf21,
    0xbfcdc14ea14e89f9,
    0x3ca4d9fe48a91cef,
    0x3fca7022be084d99,
    0x3cacd827f6c074a2,
    0xbfc80781c32422e7,
    0x3cb1d336c8b0a153,
    0x3fc62d94d97e859c,
    0x3cb3296749aaf800,
    0xbfc4b2a38f1ab9b4,
    0x3c845d52c7c075b2,
    0x3fc37aaceac987b9,
    0x3ca3bc249963d4c1,
    0xbfc2740819f1caaa,
    0xbcc069eacea8ff0b,
    0x3fc192f2627a74e3,
    0xbc7bc4fd81e2b2c5,
    0xbfc0cf3ee98f769b,
    0x3cba82b3a8997d82,
    0x3fc0230ba90f2871,
    0xbcb71414f52d813b,
    0xbfbf13fb0c0e6fcd,
    0xbcbae2d399eafcc6,
    0x3fbe018dac1c17e3,
    0xbc78e44442565953,
    0xbfbd09b21e36c0bd,
    0xbcb8c779e4075b10,
    0x3fbc2861347b1b39,
    0xbcb9f6a4816aab2e,
    0xbfbb5a622198a72c,
    0xbcb8e727b71a083d,
    0x3fba9d183bc04545,
    0xbcb67533047d83fb,
    0xbfb9ee5eee1a97c6,
    0x3c52f9257b962770,
    0x3fb94c6f5898708b,
    0xbcab7916830bd3b8,
    0xbfb8b5ccb03d459b,
    0x3cbb1b180f8e9062,
    0x3fb829356c2fb67c,
    0xbcb267f22477b55d,
    0xbfb7a597eb76a5e3,
];

/**
Taylor series at different zeros and extremums for Y0
Generated by SageMath:
```python
def compute_intervals(zeros):
    intervals = []
    for i in range(0, len(zeros)):
        if i == 0:
            a = 1.35 - zeros[i]
            b = (zeros[i] + zeros[i + 1]) / 2 + 0.05 - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
        elif i + 1 > len(zeros) - 1:
            a = (zeros[i - 1] + zeros[i]) / 2 - 0.05 - zeros[i]
            b = (zeros[i]) + 0.83 + 0.05 - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
        else:
            a = (zeros[i - 1] + zeros[i]) / 2 - zeros[i] - 0.05
            b = (zeros[i] + zeros[i + 1]) / 2 + 0.05  - zeros[i]
            intervals.append((RealField(18)(a), RealField(18)(b), RealField(110)(zeros[i])))
    return intervals

intervals = compute_intervals(y0_zeros)
print(intervals)

def build_sollya_script(a, b, zero, deg):
    return f"""
prec = 500;
bessel_y0 = library("/Users/radzivon/RustroverProjects/pxfm/notes/bessel_sollya/cmake-build-release/libbessel_sollya.dylib");
f = bessel_y0(x + {zero});
d = [{a}, {b}];
pf = remez(f, {deg}, d);
for i from 0 to degree(pf) do {{
    write(coeff(pf, i)) >> "coefficients.txt";
    write("\\n") >> "coefficients.txt";
}};
"""

def load_coefficients(filename):
    with open(filename, "r") as f:
        return [RR(line.strip()) for line in f if line.strip()]

def call_sollya_on_interval(a, b, zero, degree=12):
    sollya_script = build_sollya_script(a, b, zero, degree)
    with open("tmp_interval.sollya", "w") as f:
        f.write(sollya_script)
    import subprocess
    if os.path.exists("coefficients.txt"):
        os.remove("coefficients.txt")
    try:
        result = subprocess.run(
            ["sollya", "tmp_interval.sollya"],
            check=True,
            capture_output=True,
            text=True
        )
    except subprocess.CalledProcessError as e:
        return

degree = 19

print(f"pub(crate) static Y0F_COEFFS: [[u64;{degree + 1}]; {len(intervals)}] = [")
for i in range(0, len(intervals)):
    interval = intervals[i]
    call_sollya_on_interval(interval[0], interval[1], interval[2], degree)
    coeffs = load_coefficients(f"coefficients.txt")
    print("[")
    for c in coeffs:
        print(double_to_hex(c) + ",")
    print("],")
print("];")
```
**/
pub(crate) static Y0F_COEFFS: [[u64; 20]; 47] = [
    [
        0x3fe0aa48442f0155,
        0x3d11ed4773c6415f,
        0xbfd0aa48442f162a,
        0x3fa439fac1624246,
        0x3f80d2af4f00d104,
        0x3f4f71647d051640,
        0xbf5444bde0fa48b3,
        0x3f384c209fbb50e7,
        0xbf217aa5f3097965,
        0x3f0daff720f5d822,
        0xbef8bdcfa21ebaed,
        0x3ee4887facb15a0b,
        0xbed11c2401d892be,
        0x3ebd2c017acf269e,
        0xbeaa14296e5b7b74,
        0x3e94971e27f90596,
        0xbe77201babf9b7c9,
        0x3e6cc050fe020908,
        0xbe6b632549f00af1,
        0x3e5277e1ae25404a,
    ],
    [
        0xbba18ceb893eb87c,
        0xbfd9c34256a12a0c,
        0x3faa09c9290367ef,
        0x3fadf6d59bf50ebf,
        0xbf7c116fdc5980af,
        0xbf61e32bc4ef8d1d,
        0x3f299827651691bb,
        0x3f0ab2c1fed69a09,
        0xbed486371e94f38f,
        0xbe93b216a18e7dd9,
        0xbe577704f3fadd55,
        0x3e5452f15aa6536d,
        0xbe2f693e06cc05fe,
        0x3e0a57e1fccbd789,
        0xbde995909f6026e3,
        0x3dc8bfa517a9512c,
        0xbda728c674d8a0ee,
        0x3d838725284d802a,
        0xbd6873425aa1c789,
        0x3d52a422b53b0fc1,
    ],
    [
        0xbfd5c7c556f0c19a,
        0x3b50f35d0604a0b4,
        0x3fc5c7c556f0c19a,
        0xbf8564d4b1ed0d7e,
        0xbf8a15d92dfe3e27,
        0x3f4b438430469ff8,
        0x3f37a8924cc2f90c,
        0xbef5f69b4a8a3e30,
        0xbed85b940eb5f396,
        0x3e955ac0f5c6c042,
        0x3e6d563e18798bce,
        0xbe23eac3ab92297a,
        0xbe000766e8e812ae,
        0x3dc04e181e64e229,
        0xbd46e9f85b0cc253,
        0x3d54cebc25d636df,
        0xbd348474c3065aef,
        0x3d0a97838c7520be,
        0xbce39b3cfa1c8ba9,
        0x3cb819edac59088e,
    ],
    [
        0x3a88ddbbdc886f06,
        0x3fd334cca0697a5b,
        0xbf95aef611fc4d57,
        0xbfa8969c64cbf452,
        0x3f6b2f14a95527cb,
        0x3f61d35e85fde2a3,
        0xbf226dd71e391c8b,
        0xbf08177e4fe52322,
        0x3ec6a9227352f9a2,
        0x3ea34aa7573eee4f,
        0xbe60a2814d7b11cb,
        0xbe3442a3d32fa706,
        0x3defa6c50a5cf73b,
        0x3dbf14e549dc80e8,
        0xbd7714c3a7b07f01,
        0xbd406792463d6264,
        0x3cf337bfd59bd296,
        0x3cc384214125801f,
        0xbc833acea3bc9542,
        0x3c3987516385e911,
    ],
    [
        0x3fd15f993fceab5c,
        0xbaa8af8d239e4871,
        0xbfc15f993fceab5c,
        0x3f758ef6efbed797,
        0x3f86395dfe49fcd4,
        0xbf3fb15104a41c00,
        0xbf35f88a11d5564f,
        0x3eef37d226a824b7,
        0x3ed6f7bab104f34f,
        0xbe8f0c45a3824ebf,
        0xbe6dfe11df12b6ad,
        0x3e2311adc2e89e5f,
        0x3dfad34e1834ab2f,
        0xbdafdc8064be1d7c,
        0xbd819498ad78d6d9,
        0x3d33a293fa0ecdf8,
        0x3d016f5610e5ee78,
        0xbcb1fa76935ad115,
        0xbc7bf387d915d027,
        0x3c2e03867a0e0bb9,
    ],
    [
        0x3a611755d796a707,
        0xbfcff635cc72b9f1,
        0x3f89036451ff57c5,
        0x3fa4e667a71556af,
        0xbf60325ee41e910c,
        0xbf5fe23914fb9128,
        0x3f17f84d7c50e4c4,
        0x3f06afdd57be1e14,
        0xbec04053abf43861,
        0xbea2aea9ec48d92c,
        0x3e593eb9f1dd9b45,
        0x3e3428a3a3e36551,
        0xbde99d8c42cd45d7,
        0xbdbec98051163b5f,
        0x3d7261362e5bdb77,
        0x3d418f30b5d372ea,
        0xbcf3bc66bc8f0326,
        0xbcbf0e7e9d978ed3,
        0x3c7048e8dd964b89,
        0x3c36261a2f3492c7,
    ],
    [
        0xbfcdc14ea14e89f9,
        0x3aa4e2b42285fc00,
        0x3fbdc14ea14e89f9,
        0xbf6b037fe9cf2a52,
        0xbf8367d7d608e4ba,
        0x3f34abef5636e4f7,
        0x3f33d8a661229259,
        0xbee5cfe92a1a2c46,
        0xbed571814a1aa2fa,
        0x3e87414e33c9bbe3,
        0x3e6ca7069e73bd8d,
        0xbe1e0b3a70621177,
        0xbdfa15dd62adfe9f,
        0x3daa3394912a1c2a,
        0x3d81419afd41deda,
        0xbd30883116ea725b,
        0xbd015e30f7cd66a3,
        0x3cafb465534ecbc2,
        0x3c7b47e69e4ae374,
        0xbc289ad87bed5163,
    ],
    [
        0xba5f4cb5f9ae9cdd,
        0x3fcbf32a27594007,
        0xbf80bc2d84e65214,
        0xbfa26cab38a8b368,
        0x3f55f03e47165d72,
        0x3f5caaa76e34992d,
        0xbf10c5f18c46d030,
        0xbf04f0af7d46cd48,
        0x3eb7d1e28094e209,
        0x3ea1ad0731228496,
        0xbe536021c8cb24e0,
        0xbe3371ae6c75c8fb,
        0x3de46ce077827372,
        0x3dbe235d35e0e96c,
        0xbd6e408dd7a1c663,
        0xbd415f07fb6c8ced,
        0x3cf0a41f629aad6d,
        0x3cbefdeac52c4fdf,
        0xbc6c1317ba4d8f8d,
        0xbc3612bde2f7661b,
    ],
    [
        0x3fca7022be084d99,
        0xbaa0a318dd73aa40,
        0xbfba7022be084d99,
        0x3f62ee079d020b12,
        0x3f8163191c30aa62,
        0xbf2d7806ea72fc76,
        0xbf320f95702b1d4e,
        0x3ee00610882294ab,
        0x3ed3e398cbc472e2,
        0xbe81bbe181c6523e,
        0xbe6b0f89b7c60a3e,
        0x3e17c3f85883b06e,
        0x3df902366129fb57,
        0xbda564920f06a0e1,
        0xbd80be17ede7d8c5,
        0x3d2bb973d0a58433,
        0x3d010197944a7b7a,
        0xbcab2b7e2e8d3197,
        0xbc7ae6fb871f7a4e,
        0x3c2564b2538bde54,
    ],
    [
        0x3a5bec68bfc2c36e,
        0xbfc925c35988ee29,
        0x3f7862549367591e,
        0x3fa0a4512039d6a2,
        0xbf5013b38cfb9292,
        0xbf5a24a1215f6684,
        0x3f08f91421377fac,
        0x3f035d17cec01730,
        0xbeb2283a93114086,
        0xbea099e71392f561,
        0x3e4e5de01e2e3be3,
        0x3e32885854eaadbf,
        0xbde0730c29640202,
        0xbdbd1743cbfe3c2d,
        0x3d68f872424fd54b,
        0x3d40f166f8029589,
        0xbcec1091c847e3c2,
        0xbcbe7b186f41ce68,
        0x3c681a8821bdcab7,
        0x3c35ca9b45e738e8,
    ],
    [
        0xbfc80781c32422e7,
        0x3a9b4076518b04c2,
        0x3fb80781c32422e7,
        0xbf5c6923374d561f,
        0xbf7fbe6df840847f,
        0x3f264f4711a85f1a,
        0x3f309ff42b0d7a68,
        0xbed8a60685a597da,
        0xbed282d26a74c386,
        0x3e7bdb57a889a627,
        0x3e697d9c12a5f7d7,
        0xbe131aa86918952c,
        0xbdf7d486eec101bf,
        0x3da197f259b66ceb,
        0x3d801dd7d5f74359,
        0xbd27480dc76af4da,
        0xbd008313600c33ff,
        0x3ca73d87319600e4,
        0x3c7a4e179413580a,
        0xbc228d64574847c6,
    ],
    [
        0xba58a2b8c30df9f1,
        0x3fc70c4f66cab47f,
        0xbf72c6731071e936,
        0xbf9e924b85a17361,
        0x3f48d6c364d92082,
        0x3f58247b02d6b0f6,
        0xbf0376125938561d,
        0xbf0206da232a2b6a,
        0x3eacaf84db8714f5,
        0x3e9f3671177306e2,
        0xbe48654b000fe235,
        0xbe3199ec88b19cf1,
        0x3ddaeb1a845731d1,
        0x3dbbe67c19a8b3db,
        0xbd64cdf9cf3d3768,
        0xbd40649386f900b6,
        0x3ce7c7f10c7b4f1c,
        0x3cbdb746d6eb94e6,
        0xbc64bc5253190060,
        0xbc3557b9b16a89ce,
    ],
    [
        0x3fc62d94d97e859c,
        0xba96cd10d8b5c047,
        0xbfb62d94d97e859c,
        0x3f565481b55eaefb,
        0x3f7d5f857a2a6107,
        0xbf21a015a2ccb78f,
        0xbf2eeb4eafd8614b,
        0x3ed3a7b79e4d80fd,
        0x3ed154ed4598d2e8,
        0xbe767f762ea294cc,
        0xbe680ec1e042d97f,
        0x3e0f529652bc2274,
        0x3df6ad7bd2024d95,
        0xbd9d4e5832565c14,
        0xbd7eeb6eb75ff9bb,
        0x3d23b1ec85d8a04d,
        0x3cffe8d9ee735f6e,
        0xbca3f3509a47a6e9,
        0xbc79944b53196481,
        0x3c201e2c745e4aa7,
    ],
    [
        0x3a55b0ab0ebeece0,
        0xbfc5664d37c37d7b,
        0x3f6e0ee8ec84659a,
        0x3f9c6c415c971b4b,
        0xbf43ec49cb941f55,
        0xbf56853b2d047885,
        0x3eff632a9396fd4e,
        0x3f00e6afa01af561,
        0xbea7541247acdf41,
        0xbe9d735e8beb8fda,
        0x3e440e6a7cafa05f,
        0x3e30b9cfae2ac009,
        0xbdd668087e3287e7,
        0xbdbab498e70e9ea6,
        0x3d618b563f4acf50,
        0x3d3f99da14d77c75,
        0xbce45076ead03dc5,
        0xbcbcd37e761916b0,
        0x3c61edd718069881,
        0x3c34cc061034b7d3,
    ],
    [
        0xbfc4b2a38f1ab9b4,
        0x3a9364b60d62926b,
        0x3fb4b2a38f1ab9b4,
        0xbf5225a5c73f2233,
        0xbf7b750d89a9b35f,
        0x3f1cbdb4f1d5dbbd,
        0x3f2cfe933fc6d0b8,
        0xbed01ef10d839bbd,
        0xbed05375a588a723,
        0x3e729afe7ea7bb41,
        0x3e66c8fe015e518d,
        0xbe0a2a01e7b0eea7,
        0xbdf59b3304eb9683,
        0x3d98c0a510b3970f,
        0x3d7da3422b46c6fd,
        0xbd20d3b607fe1eea,
        0xbcfec41adcaebfd3,
        0x3ca13d5406bf8e1f,
        0x3c78cbb7b2160e9d,
        0xbc1c21d7e79d7cdd,
    ],
    [
        0xba5323f9b6ccc537,
        0x3fc40f8ffdf09a5f,
        0xbf68c37a29c4586f,
        0xbf9aab099314b209,
        0x3f406f735cc0f6a6,
        0x3f552d29a06802e0,
        0xbef9fc04c675c0ed,
        0xbeffe48825ed3c8e,
        0x3ea36bd2d58ff446,
        0x3e9be87e2cad2cef,
        0xbe40d1fdedc6aeab,
        0xbe2fdbeb107dea8d,
        0x3dd2f44d0103adaf,
        0x3db9921373f436b5,
        0xbd5df6b7dcebf0cb,
        0xbd3e6c005b0790cd,
        0x3ce184532ea2ece5,
        0x3cbbe53c3bb603ab,
        0xbc5f3771cd242de7,
        0xbc3434c8b8a11cfb,
    ],
    [
        0x3fc37aaceac987b9,
        0xba90b92ae4d7d7d4,
        0xbfb37aaceac987b9,
        0x3f4e3fdbfd65014a,
        0x3f79de7a33bc3a97,
        0xbf1801d911fbd06c,
        0xbf2b605a5ade3a80,
        0x3ecb0a2608144a3e,
        0x3eceeceb341ad824,
        0xbe6f623fc7bea155,
        0xbe65a9ca94a0c3d1,
        0x3e0638ba2f61064f,
        0x3df4a1b4215e3790,
        0xbd9530c714d29747,
        0xbd7c6e51c6a1b974,
        0x3d1d0eb7ca8df60c,
        0x3cfda65ce93430da,
        0xbc9e07ccab987f81,
        0xbc780093c5d30b9b,
        0x3c18b2d402ea0065,
    ],
    [
        0x3a50f5f715f7bbed,
        0xbfc2f206e49909c7,
        0x3f64dbf6a9fb80d7,
        0x3f99336443318ed1,
        0xbf3bb6aa3d4e9e78,
        0xbf540aaa5d94bd8d,
        0x3ef5f61b666129a6,
        0x3efe4158391f2c2b,
        0xbea07a7a0745f737,
        0xbe9a8ea97b67005b,
        0x3e3cb10b3affb89d,
        0x3e2e6d78879f9e11,
        0xbdd0444478dae7f7,
        0xbdb8850c99b7f6d9,
        0x3d59e4fa3cda54b8,
        0x3d3d4b2c0d9a7058,
        0xbcde801896f0124b,
        0xbcbaf9228124b35f,
        0x3c5b617b3adad59d,
        0x3c339ad350e39bd5,
    ],
    [
        0xbfc2740819f1caaa,
        0x3a8d2c7c1e4ae4d0,
        0x3fb2740819f1caaa,
        0xbf49b6f37d0a00f9,
        0xbf78868d7401bf2e,
        0x3f1470a7cbcb436a,
        0x3f29fe94ce3d3e83,
        0xbec71660e61f0f0d,
        0xbecd6dfcdb02601a,
        0x3e6ae79c35d01d47,
        0x3e64ac50be6c8ca2,
        0xbe03258409228093,
        0xbdf3c09685a074c5,
        0x3d925d859ad245e6,
        0x3d7b5092486c910e,
        0xbd19586f5023b640,
        0xbcfc96eb2f38ad0b,
        0x3c9a5effba844bdd,
        0x3c773a301edc2dfa,
        0xbc15d3dbe33c7518,
    ],
    [
        0xba4e37089778ea21,
        0x3fc1ff5ebddd3c3a,
        0xbf61e2035324643c,
        0xbf97f3506d4a1231,
        0x3f37c65c9302c53b,
        0x3f53117816335151,
        0xbef2df9afa521294,
        0xbefcd5d4a9d78a14,
        0x3e9c672d4d6f7744,
        0x3e995e4b102194f1,
        0xbe38d2263613e130,
        0xbe2d24fc9458bf09,
        0x3dcc462d9d5cfc73,
        0x3db78eafb1532595,
        0xbd569f5cff8c70e5,
        0xbd3c3c4e4498b441,
        0x3cdacc54a887b5d2,
        0x3cba15f5efa45b30,
        0xbc5832e960db1c38,
        0xbc330386a7e638ec,
    ],
    [
        0x3fc192f2627a74e3,
        0xba89b556ebab6ebb,
        0xbfb192f2627a74e3,
        0x3f4635b38affe698,
        0x3f775eceaabf7f86,
        0xbf11ac9e0164f7c1,
        0xbf28cc464a35b0af,
        0x3ec4014d9bf389c3,
        0x3ecc1f05a2d85156,
        0xbe6761d18ebb05ff,
        0xbe63cb9af103cdee,
        0x3e00b3cb55bd2afc,
        0x3df2f5c76394275a,
        0xbd9017771f2e29f9,
        0xbd7a4a5e3b2d5138,
        0x3d16512aca06945f,
        0x3cfb98c8be20711d,
        0xbc9757b30d16a5ee,
        0xbc767c7b71bfb1f4,
        0x3c136b7b0561b743,
    ],
    [
        0x3a4b1002c004927f,
        0xbfc12dd55d4be2b3,
        0x3f5f1aee31818d19,
        0x3f96de64242a8310,
        0xbf34afdf89fca61a,
        0xbf5238cfc13ac771,
        0x3ef0719d13e00e52,
        0x3efb974781a526b4,
        0xbe98cc82a70d7511,
        0xbe9850ae878c25bb,
        0x3e35bba73e2806aa,
        0x3e2bfe1396e83192,
        0xbdc8d7dbe460a922,
        0xbdb6adfbd768603b,
        0x3d53f51d88f69ed6,
        0x3d3b40d2ef14e91d,
        0xbcd7bf035815bac1,
        0xbcb93eeb84df14db,
        0x3c558affe04bfd01,
        0x3c3271e7967d7305,
    ],
    [
        0xbfc0cf3ee98f769b,
        0x3a86da6c634235ab,
        0x3fb0cf3ee98f769b,
        0xbf436f451f6e14fb,
        0xbf765d05948a946a,
        0x3f0ef55c5a0d16cd,
        0x3f27bfec9d15d038,
        0xbec18c549f28e529,
        0xbecaf7544eeac758,
        0x3e648e81edf38c48,
        0x3e630341e78cfd8f,
        0xbdfd73d2c9452b3d,
        0xbdf23ec2727f0281,
        0x3d8c78e44f7b9bcd,
        0x3d795a6f23f9da2a,
        0xbd13d1c9426292bd,
        0xbcfaac9eaeac2f66,
        0x3c94d10dfccc4578,
        0x3c75c945f76408b2,
        0xbc1163d3d5ce6e9a,
    ],
    [
        0xba485f043bdbb526,
        0x3fc0768257dad56a,
        0xbf5b602a7beaaa48,
        0xbf95ebc22efd092c,
        0x3f3236a604142e61,
        0x3f517a482faa8d85,
        0xbeecfc00890787ae,
        0xbefa7d7b128ac538,
        0x3e95e419f1b57028,
        0x3e97603cea235241,
        0xbe333a0b436c63ee,
        0xbe2af46417845775,
        0x3dc609ac8c9d03b0,
        0x3db5e11b879ea6c7,
        0xbd51c27529e4df3d,
        0xbd3a586462889bc9,
        0x3cd534894ca2b35c,
        0x3cb8752d410cf2ab,
        0xbc534f4c2209f5d6,
        0xbc31e77501be882f,
    ],
    [
        0x3fc0230ba90f2871,
        0xba847a7f9658411c,
        0xbfb0230ba90f2871,
        0x3f413164a0864cde,
        0x3f7579c1bdbcfc99,
        0xbf0b67e1913c668b,
        0xbf26d26de4fd8c5d,
        0x3ebf1b520b063855,
        0x3ec9f01e7c190993,
        0xbe624071b1796132,
        0xbe624f8e939cd235,
        0x3dfa356635974bce,
        0x3df199120d2c6cb8,
        0xbd896771e4084cbe,
        0xbd787eddd7e8c8de,
        0x3d11bccf90b467d6,
        0x3cf9d1e1e4121a0b,
        0xbc92b12ec0781e49,
        0xbc75211fc7c90421,
        0x3c0f55df95f634cd,
    ],
    [
        0x3a460d6fbf05bc76,
        0xbfbfa8b3f9ae4375,
        0x3f5856073b7fa2cd,
        0x3f9514e652eb2e96,
        0xbf3032298718ea1a,
        0xbf50d1153fde431b,
        0x3ee9cb455c29d6a7,
        0x3ef982167b1c52c2,
        0xbe938191ef68ea9a,
        0xbe968865345b312c,
        0x3e312960010d82bd,
        0x3e2a0403679f5e6f,
        0xbdc3b67cc083ed86,
        0xbdb526038b845220,
        0x3d4fda067c33f098,
        0x3d3981de3f85a18a,
        0xbcd311ba5dce9c4c,
        0xbcb7b8c6b1f436be,
        0x3c516ad833c8518f,
        0x3c3164c5b1ad1605,
    ],
    [
        0xbfbf13fb0c0e6fcd,
        0x3a827422ca4738d4,
        0x3faf13fb0c0e6fcd,
        0xbf3eb3e6fcc47c00,
        0xbf74af74cbd77bef,
        0x3f087bb1ebeaec75,
        0x3f25fe629203150e,
        0xbebbd0f2a6555e6d,
        0xbec9040de8306490,
        0x3e6057f7a76994c8,
        0x3e61ad6dd5104aaf,
        0xbdf782a6f5755f17,
        0xbdf1027dc050a232,
        0x3d86d65b15ccd7f2,
        0x3d77b59e6504e365,
        0xbd0ff803cbe504ea,
        0xbcf90777ab1eecb1,
        0x3c90e3e569343cf0,
        0x3c7483e67d2b1244,
        0xbc0c645af638f1e4,
    ],
    [
        0xba440bd0649beabe,
        0x3fbe8727c572a2c2,
        0xbf55d1ef092ab395,
        0xbf9454e7a7395636,
        0x3f2d0cc3a7fa6d3d,
        0x3f50398d2cbd02df,
        0xbee725b0909f9c66,
        0xbef8a022f5fee447,
        0x3e9185b1ea97a535,
        0x3e95c571167401aa,
        0xbe2edff6514de1fb,
        0xbe29298da3c4eeb0,
        0x3dc1c34705ba31b0,
        0x3db47ab8ec3fa79a,
        0xbd4cc249ccaddeda,
        0xbd38bbcc1e21814d,
        0x3cd141d1f2792c58,
        0x3cb7092ee31bcba6,
        0xbc4f9a4c89c50990,
        0xbc30e9e8968b374d,
    ],
    [
        0x3fbe018dac1c17e3,
        0xba80c1abe6aa0714,
        0xbfae018dac1c17e3,
        0x3f3ba21bd15d02a4,
        0x3f73f9e0db07e7ef,
        0xbf060b77c5e27622,
        0xbf253f9b1a5d228c,
        0x3eb910b38812c254,
        0x3ec82ee6dfdfedde,
        0xbe5d7cc2a9a604a3,
        0xbe611a57d864423c,
        0x3df53d40151aeb73,
        0x3df07915ef6b5aae,
        0xbd84aabcb7fdba8d,
        0xbd76fcb8aa9766ee,
        0x3d0cfd0048bc3d18,
        0x3cf84c0ea91c141e,
        0xbc8eb2f452175364,
        0xbc73f11a157cfdb1,
        0x3c09dc81c0f6308d,
    ],
    [
        0x3a424f0279d28359,
        0xbfbd82939ab62339,
        0x3f53b5a54845670f,
        0x3f93a7ff1622def8,
        0xbf2a3ebc476a606d,
        0xbf4f61adde3a8c61,
        0x3ee4ec45da0478b0,
        0x3ef7d3b28159f23c,
        0xbe8fb3f21bcd7f9b,
        0xbe95145a876d226d,
        0x3e2bf64cdf7bcec8,
        0x3e2862204ac41ad6,
        0xbdc01c0d485c0688,
        0xbdb3dd6cb1b7871e,
        0x3d4a20206ecf62c0,
        0x3d3804a9aec4a1d0,
        0xbccf69b136f57d3d,
        0xbcb66596d85979c5,
        0x3c4cd279fa7882ea,
        0x3c30769ff4b3ca5c,
    ],
    [
        0xbfbd09b21e36c0bd,
        0x3a7e98532553a30e,
        0x3fad09b21e36c0bd,
        0xbf390b0e6a475e45,
        0xbf7355b904fbf7ee,
        0x3f03fc459d1e25a4,
        0x3f2492cc61d19dfe,
        0xbeb6bcf110a02ad2,
        0xbec76d44f6a83516,
        0x3e5ac61efcb3c4fb,
        0x3e609436fcaa28b7,
        0xbdf34eb609611906,
        0xbdeff66294284d26,
        0x3d82d05bfabe3fa1,
        0x3d76525f846d8f34,
        0xbd0a6ebb93b8c1c1,
        0xbcf79e4d433c3e1e,
        0x3c8c0b46395a5d4c,
        0x3c73680e8e6d3a55,
        0xbc07ab907ba51139,
    ],
    [
        0xba40cb9f0ac5f609,
        0x3fbc96700031f601,
        0xbf51eb2a07d0f09e,
        0xbf930b36eddaa234,
        0x3f27dd2dde84b73c,
        0x3f4e696553e0b8a5,
        0xbee3085aa35a1647,
        0xbef7199f24bccae1,
        0x3e8cdbab6a766151,
        0x3e9472a7cffbf919,
        0xbe2979f5211c1b94,
        0xbe27ab4b01a8f4f2,
        0x3dbd63904dfa8ba3,
        0x3db34c83fb06e2a2,
        0xbd47dcfd9eb27cac,
        0xbd375b01b44fdd25,
        0x3cccbcdd20ec4238,
        0x3cb5cd153aec4d58,
        0xbc4a69bd7b4cc2dd,
        0xbc300a811795f9ce,
    ],
    [
        0x3fbc2861347b1b39,
        0xba7c09a1fde2fb79,
        0xbfac2861347b1b39,
        0x3f36d57bffb37fd5,
        0x3f72c060ef553f18,
        0xbf023a407b722d2e,
        0xbf23f55581ec683d,
        0x3eb4bfb4daa2ff62,
        0x3ec6bc69099af2eb,
        0xbe5873340987d3e4,
        0xbe601951f02d1aef,
        0x3df1a6174fe6c1d7,
        0x3def0eca5b8b12c7,
        0xbd8137cb2165d458,
        0xbd75b4f7bd28054c,
        0x3d08393716b5fca1,
        0x3cf6fce89cba4ac5,
        0xbc89bd6ded5c4b4d,
        0xbc72e80789391a47,
        0x3c05c29090b50e6e,
    ],
    [
        0x3a3ef156875531c0,
        0xbfbbbf246019c0d4,
        0x3f506224199140d8,
        0x3f927c3416c09898,
        0xbf25d279dc87cf69,
        0xbf4d86a5f5adbdac,
        0x3ee169041634c248,
        0x3ef66f5bd1bedae1,
        0xbe8a69b2c717d527,
        0xbe93de4eab456cb7,
        0x3e2755eabbde3ae5,
        0x3e2702fe7ba9ea29,
        0xbdbaf2007e9f86cf,
        0xbdb2c697467e9d58,
        0x3d45e77a8d8ed480,
        0x3d36bd7b9bf758b8,
        0xbcca69cd3393f1f3,
        0xbcb53ebe392b410d,
        0x3c484fd5fb2e8d84,
        0x3c2f4a2d144f3339,
    ],
    [
        0xbfbb5a622198a72c,
        0x3a79d80591e49647,
        0x3fab5a622198a72c,
        0xbf34ee71cf67c243,
        0xbf7237c02b462f6f,
        0x3f00b67b6fdfec62,
        0x3f2365167d8bc330,
        0xbeb3086b7a296e6a,
        0xbec61a141425c29a,
        0x3e56712b23991fd1,
        0x3e5f50736839c4b4,
        0xbdf0366d02ba61e7,
        0xbdee38f9bd721f3c,
        0x3d7faa3d1fa2f65c,
        0x3d7523176e54d98c,
        0xbd064cd2661d5683,
        0xbcf666aeeb01fac8,
        0x3c87ba1fa4f1e367,
        0x3c7270495b5c89e1,
        0xbc04160b367dbe96,
    ],
    [
        0xba3c9b03c332a4d9,
        0x3fbaf9cb42cd08a7,
        0xbf4e1c66d7616e37,
        0xbf91f90fd1013589,
        0x3f240e3eb09b7d6d,
        0x3f4cb682ff471274,
        0xbee0016819a61dd7,
        0xbef5d2d1c420646d,
        0x3e884b0fe8a85335,
        0x3e93559d96bef592,
        0xbe257a0be7496cf0,
        0xbe26677c8f53a78d,
        0x3db8d1ae21719abf,
        0x3db24a6e1aaff2b1,
        0xbd44320129c6c9fa,
        0xbd362ae01a0786fe,
        0x3cc8613ae7e270bf,
        0x3cb4b9afb4c2c13d,
        0xbc4677c64aea5583,
        0xbc2e8bc5c6751b5b,
    ],
    [
        0x3fba9d183bc04545,
        0xba77e561a96d4028,
        0xbfaa9d183bc04545,
        0x3f334779874010dc,
        0x3f71ba2299ab88a8,
        0xbefecb19f5bdc649,
        0xbf22e052707cc859,
        0x3eb18a5da77edd83,
        0x3ec5846b622f591f,
        0xbe54b17e97b58982,
        0xbe5e7f76674ddb95,
        0x3dedeb504ed5af66,
        0x3ded72e25ee658df,
        0xbd7d3e076dbbf696,
        0xbd749b821fe20f3e,
        0x3d049d371eb9a655,
        0x3cf5da8b02009624,
        0xbc85f523f806a305,
        0xbc72002087ab3d08,
        0x3c029c1fc18b33a1,
    ],
    [
        0x3a3a88b52ad71fd6,
        0xbfba4407dac72297,
        0x3f4bcba4dec1da44,
        0x3f91803c65cafdfb,
        0xbf2283df2b3e4a6e,
        0xbf4bf695e89259cd,
        0x3edd8f3759122d51,
        0x3ef54246c8e04218,
        0xbe867111bc8e6787,
        0xbe92d72a1f62ec12,
        0x3e23d9ca3eb1ba81,
        0x3e25d74a6e22459d,
        0xbdb6f4b42072392a,
        0xbdb1d6f985c57dff,
        0x3d42b1d7cf9b4cd0,
        0x3d35a21945de2941,
        0xbcc696fb23613929,
        0xbcb43d171e79336e,
        0x3c44d71ab06f147a,
        0x3c2dd8d35a071289,
    ],
    [
        0xbfb9ee5eee1a97c6,
        0x3a762edf631059ae,
        0x3fa9ee5eee1a97c6,
        0xbf31d55d93e59bd7,
        0xbf7146219394a99c,
        0x3efc7d32bb646e2a,
        0x3f226599aed4f1ca,
        0xbeb03ba58ec85c13,
        0xbec4f9e3961bb9d2,
        0x3e5328d4dc33419b,
        0x3e5dbda7ac70e12a,
        0xbdebb7c2f18944af,
        0xbdecbac24c44754e,
        0x3d7b1c35b8e6b33e,
        0x3d741d23c73beb63,
        0xbd03208f35e76c98,
        0xbcf5578464fda8c4,
        0x3c8464a7f6b1df1b,
        0x3c7196e58f32cce9,
        0xbc014d2b3ace3f3e,
    ],
    [
        0xba38b02fb93661bd,
        0x3fb99be73fa3efcc,
        0xbf49c3248da75775,
        0xbf91107147eda800,
        0x3f212980be9d8520,
        0x3f4b44e1221e6051,
        0xbedb67b78c1dd9c5,
        0xbef4bc49e9b5bcfd,
        0x3e84d02ffb8bcfb4,
        0x3e9261c31456e436,
        0xbe226b400744b9fc,
        0xbe2551251a2b326a,
        0x3db5500f94f4c062,
        0x3db16b4e9358961b,
        0xbd415e707594a4d3,
        0xbd3522309584a870,
        0x3cc501462fe4f60f,
        0x3cb3c833bcecf8fe,
        0xbc436559f25c1c33,
        0xbc2d306ec1811b1c,
    ],
    [
        0x3fb94c6f5898708b,
        0xba74a88290d7a4ac,
        0xbfa94c6f5898708b,
        0x3f308f4f1b8fb0dc,
        0x3f70da931c776c71,
        0xbefa7550d2940f2a,
        0xbf21f3b978a47cf4,
        0x3eae28ea02472df5,
        0x3ec47930aec78cac,
        0xbe51ce32c4f34f5f,
        0xbe5d0950e99c6d74,
        0x3de9c5a1604083cd,
        0x3dec0f17789f13db,
        0xbd7938fe1564d610,
        0xbd73a70ba9fa6247,
        0x3d01cef069eda24e,
        0x3cf4dcbda6a0c630,
        0xbc8300b3c31cd5e1,
        0xbc7133ff226b4e9d,
        0x3c0022c72f3e0ca8,
    ],
    [
        0x3a3709beeb8f4019,
        0xbfb8ffc9b9a131f6,
        0x3f47f724314bb99d,
        0x3f90a89c5d1074ba,
        0xbf1feeaeb33465e8,
        0xbf4a9fba36a7a08e,
        0x3ed980034770f3b1,
        0x3ef43fa4bb8cba57,
        0xbe835f40f3a39011,
        0xbe91f465ba292c06,
        0x3e212688f74f5e80,
        0x3e24d3f7e3fdceb2,
        0xbdb3daee9c006de9,
        0xbdb106a132d75b24,
        0x3d4030e73d7116eb,
        0x3d34aa4bf9632739,
        0xbcc3982e7edcdc78,
        0xbcb35a56dff5732a,
        0x3c421b98fa55acf3,
        0x3c2c91bd82623308,
    ],
    [
        0xbfb8b5ccb03d459b,
        0x3a734f0bc0954fe8,
        0x3fa8b5ccb03d459b,
        0xbf2edc98b92fedf3,
        0xbf70767d524cea88,
        0x3ef8a85a847c89c3,
        0x3f2189afaa2bffcc,
        0xbeac1d231a69bb03,
        0xbec40139bdbc9d2b,
        0x3e509a6859c8e470,
        0x3e5c60fc5f9b3335,
        0xbde80ad391f90a29,
        0xbdeb6e954da74169,
        0x3d778adc78fe1dda,
        0x3d73386798319de2,
        0xbd00a1eddc14e0db,
        0xbcf469720aad785b,
        0x3c81c2c4f59d4c84,
        0x3c70d6e1ce75d284,
        0xbbfe2f9d05de39de,
    ],
    [
        0xba3590528139193d,
        0x3fb86e51bb2ee24d,
        0xbf465e3bad214eb8,
        0xbf9047d6ed159c31,
        0x3f1dce4a381ce24e,
        0x3f4a05b93842da9a,
        0xbed7ce3df60b0ea1,
        0xbef3cb50138cce4b,
        0x3e8216e84a5dec5c,
        0x3e918e354c015334,
        0xbe2005493039c59a,
        0xbe245ed4a3732ea3,
        0x3db28e2ed354282c,
        0x3db0a83fb893d20c,
        0xbd3e4745473bc8b5,
        0xbd3439aabdfce5c2,
        0x3cc255397c9e4815,
        0x3cb2f2e32130490a,
        0xbc40f42755a53b58,
        0xbc2bfbf6e91256d8,
    ],
    [
        0x3fb829356c2fb67c,
        0xba7218d43b6aae50,
        0xbfa829356c2fb67c,
        0x3f2cd964e5e4caa0,
        0x3f70190ce66b97c3,
        0xbef70d5fd8bad7b5,
        0xbf2126a150469b05,
        0x3eaa49ea85815006,
        0x3ec3910f5c159f49,
        0xbe4f0f4bdbe20e69,
        0xbe5bc369782995d9,
        0x3de67f2959cf1109,
        0x3dead81c082c2776,
        0xbd760a10ad193a6e,
        0xbd72d07faa97a86b,
        0x3cff288a74f6a8b5,
        0x3cf3fcf2f3388003,
        0xbc80a57f76f76c18,
        0xbc707f0f9df068ee,
        0x3bfc4fb1d6101146,
    ],
    [
        0x3a343b49405d4f7b,
        0xbfb7e656ed57a0d1,
        0x3f44f0cfc62eb61c,
        0x3f8fdaba63e9c655,
        0xbf1be7bad1c50547,
        0xbf4975ac0770c98d,
        0x3ed64a6af83ba860,
        0x3ef35e6b41b6d77b,
        0xbe80f12d050df202,
        0xbe912e744222ec55,
        0x3e1e04a8c0a85f2a,
        0x3e23f0ed5e69fd36,
        0xbdb163fd7125c627,
        0xbdb04f8efe3a8a37,
        0x3d3c64179373e0b8,
        0x3d33cfa285c216c5,
        0xbcc1331158773091,
        0xbcb2914b1b70e3a9,
        0x3c3fd49e2705ee76,
        0x3c2b6e60d53e3bd4,
    ],
    [
        0xbfb7a597eb76a5e3,
        0x3aa7b8994c81f1b7,
        0x3fa7a597eb76a5e3,
        0xbf2b0bd9eb615315,
        0xbf6f831b9629acd2,
        0x3ef59d1c40c95ba7,
        0x3f20c9d35d4be191,
        0xbea8a711bec69215,
        0xbec327e42f390662,
        0x3e4d225aa8dee715,
        0x3e5b2f83a9468f1a,
        0xbde51bef06fa95d0,
        0xbdea4ab19827a6b0,
        0x3d74b03cf45960d8,
        0x3d726eb28a7282bd,
        0xbcfd435434f09a3c,
        0xbcf396a301b50763,
        0x3c7f57830fb654b6,
        0x3c702b5b7225cba9,
        0xbbff121e95dcc172,
    ],
];
